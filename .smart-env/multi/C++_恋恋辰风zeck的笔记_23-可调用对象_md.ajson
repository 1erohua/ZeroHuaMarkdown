
"smart_sources:C++/恋恋辰风zeck的笔记/23-可调用对象.md": {"path":"C++/恋恋辰风zeck的笔记/23-可调用对象.md","last_embed":{"hash":null},"embeddings":{},"last_read":{"hash":"7b22be6aad83357214c56c619bd9391bf1d406177bb7127c26a4b61a7f08e3fe","at":1736915163182},"class_name":"SmartSource","outlinks":[{"title":"captures","target":"parameters","line":288},{"title":"threshold","target":"int n","line":317},{"title":"this","target":"int n","line":397},{"title":"&greeter","target":"const std::string& name","line":851},{"title":"capture","target":"params","line":953}],"last_import":{"mtime":1735211587733,"size":24477,"at":1736915163182,"hash":"7b22be6aad83357214c56c619bd9391bf1d406177bb7127c26a4b61a7f08e3fe"},"blocks":{"#---frontmatter---":[1,6],"##引言":[8,13],"##引言#{1}":[12,13],"##函数指针":[14,77],"##函数指针#{1}":[18,21],"##函数指针#定义与使用":[22,52],"##函数指针#定义与使用#{1}":[26,52],"##函数指针#优点与局限性":[53,77],"##函数指针#优点与局限性#{1}":[57,60],"##函数指针#优点与局限性#{2}":[61,64],"##函数指针#优点与局限性#{3}":[65,68],"##函数指针#优点与局限性#{4}":[69,69],"##函数指针#优点与局限性#{5}":[70,73],"##函数指针#优点与局限性#{6}":[74,77],"##仿函数（Functors）":[78,274],"##仿函数（Functors）#{1}":[82,85],"##仿函数（Functors）#定义与使用":[86,120],"##仿函数（Functors）#定义与使用#{1}":[90,120],"##仿函数（Functors）#特点":[121,130],"##仿函数（Functors）#特点#{1}":[125,130],"##仿函数（Functors）#高级示例":[131,168],"##仿函数（Functors）#高级示例#{1}":[135,168],"##仿函数（Functors）#使用仿函数的标准库算法":[169,211],"##仿函数（Functors）#使用仿函数的标准库算法#{1}":[173,211],"##仿函数（Functors）#仿函数与模板":[212,250],"##仿函数（Functors）#仿函数与模板#{1}":[216,250],"##仿函数（Functors）#仿函数的优势":[251,260],"##仿函数（Functors）#仿函数的优势#{1}":[255,255],"##仿函数（Functors）#仿函数的优势#{2}":[256,256],"##仿函数（Functors）#仿函数的优势#{3}":[257,260],"##仿函数（Functors）#何时使用仿函数":[261,274],"##仿函数（Functors）#何时使用仿函数#{1}":[265,265],"##仿函数（Functors）#何时使用仿函数#{2}":[266,266],"##仿函数（Functors）#何时使用仿函数#{3}":[267,270],"##仿函数（Functors）#何时使用仿函数#{4}":[271,274],"##Lambda表达式":[275,474],"##Lambda表达式#{1}":[279,282],"##Lambda表达式#基本语法":[283,301],"##Lambda表达式#基本语法#{1}":[287,294],"##Lambda表达式#基本语法#{2}":[295,295],"##Lambda表达式#基本语法#{3}":[296,296],"##Lambda表达式#基本语法#{4}":[297,297],"##Lambda表达式#基本语法#{5}":[298,301],"##Lambda表达式#示例":[302,331],"##Lambda表达式#示例#{1}":[306,331],"##Lambda表达式#捕获方式":[332,342],"##Lambda表达式#捕获方式#{1}":[336,342],"##Lambda表达式#可变Lambda":[343,372],"##Lambda表达式#可变Lambda#{1}":[347,372],"##Lambda表达式#捕获成员函数和类变量":[373,425],"##Lambda表达式#捕获成员函数和类变量#{1}":[377,425],"##Lambda表达式#Lambda与标准库算法":[426,459],"##Lambda表达式#Lambda与标准库算法#{1}":[430,459],"##Lambda表达式#Lambda表达式的优势":[460,474],"##Lambda表达式#Lambda表达式的优势#{1}":[464,464],"##Lambda表达式#Lambda表达式的优势#{2}":[465,465],"##Lambda表达式#Lambda表达式的优势#{3}":[466,466],"##Lambda表达式#Lambda表达式的优势#{4}":[467,470],"##Lambda表达式#Lambda表达式的优势#{5}":[471,474],"##`std::function` 对象":[475,629],"##`std::function` 对象#{1}":[479,482],"##`std::function` 对象#定义与使用":[483,524],"##`std::function` 对象#定义与使用#{1}":[487,524],"##`std::function` 对象#特点":[525,534],"##`std::function` 对象#特点#{1}":[529,529],"##`std::function` 对象#特点#{2}":[530,530],"##`std::function` 对象#特点#{3}":[531,534],"##`std::function` 对象#用法场景":[535,544],"##`std::function` 对象#用法场景#{1}":[539,539],"##`std::function` 对象#用法场景#{2}":[540,540],"##`std::function` 对象#用法场景#{3}":[541,544],"##`std::function` 对象#示例：回调机制":[545,582],"##`std::function` 对象#示例：回调机制#{1}":[549,582],"##`std::function` 对象#存储和调用不同类型的可调用对象":[583,629],"##`std::function` 对象#存储和调用不同类型的可调用对象#{1}":[587,629],"##`std::bind` 操作":[630,794],"##`std::bind` 操作#{1}":[634,637],"##`std::bind` 操作#基本用法":[638,662],"##`std::bind` 操作#基本用法#{1}":[642,662],"##`std::bind` 操作#占位符 (`std::placeholders`)":[663,681],"##`std::bind` 操作#占位符 (`std::placeholders`)#{1}":[667,674],"##`std::bind` 操作#占位符 (`std::placeholders`)#{2}":[675,675],"##`std::bind` 操作#占位符 (`std::placeholders`)#{3}":[676,676],"##`std::bind` 操作#占位符 (`std::placeholders`)#{4}":[677,677],"##`std::bind` 操作#占位符 (`std::placeholders`)#{5}":[678,681],"##`std::bind` 操作#示例":[682,722],"##`std::bind` 操作#示例#{1}":[686,722],"##`std::bind` 操作#与Lambda表达式的对比":[723,794],"##`std::bind` 操作#与Lambda表达式的对比#{1}":[727,784],"##`std::bind` 操作#与Lambda表达式的对比#{2}":[785,785],"##`std::bind` 操作#与Lambda表达式的对比#{3}":[786,786],"##`std::bind` 操作#与Lambda表达式的对比#{4}":[787,790],"##`std::bind` 操作#与Lambda表达式的对比#{5}":[791,794],"##绑定类的成员函数":[795,940],"##绑定类的成员函数#{1}":[799,802],"##绑定类的成员函数#使用 `std::bind` 绑定成员函数":[803,831],"##绑定类的成员函数#使用 `std::bind` 绑定成员函数#{1}":[807,831],"##绑定类的成员函数#使用Lambda表达式绑定成员函数":[832,862],"##绑定类的成员函数#使用Lambda表达式绑定成员函数#{1}":[836,862],"##绑定类的成员函数#绑定静态成员函数":[863,893],"##绑定类的成员函数#绑定静态成员函数#{1}":[867,893],"##绑定类的成员函数#绑定带有返回值的成员函数":[894,926],"##绑定类的成员函数#绑定带有返回值的成员函数#{1}":[898,926],"##绑定类的成员函数#注意事项":[927,940],"##绑定类的成员函数#注意事项#{1}":[931,931],"##绑定类的成员函数#注意事项#{2}":[932,932],"##绑定类的成员函数#注意事项#{3}":[933,936],"##绑定类的成员函数#注意事项#{4}":[937,940],"##C++ 可调用对象的总结":[941,973],"##C++ 可调用对象的总结#{1}":[945,958],"##C++ 可调用对象的总结#选择建议":[959,973],"##C++ 可调用对象的总结#选择建议#{1}":[963,963],"##C++ 可调用对象的总结#选择建议#{2}":[964,964],"##C++ 可调用对象的总结#选择建议#{3}":[965,965],"##C++ 可调用对象的总结#选择建议#{4}":[966,969],"##C++ 可调用对象的总结#选择建议#{5}":[970,973],"##完整示例代码":[974,1109],"##完整示例代码#{1}":[978,1109],"##源码连接":[1110,1113],"##源码连接#{1}":[1112,1113]}},