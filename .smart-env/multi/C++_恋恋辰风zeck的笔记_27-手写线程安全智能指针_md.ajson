
"smart_sources:C++/恋恋辰风zeck的笔记/27-手写线程安全智能指针.md": {"path":"C++/恋恋辰风zeck的笔记/27-手写线程安全智能指针.md","last_embed":{"hash":null},"embeddings":{},"last_read":{"hash":"160f64134618012ad6ebb6d6244809d3c66a4c8096f9eaff23630d66fa1c684a","at":1736915163202},"class_name":"SmartSource","outlinks":[],"last_import":{"mtime":1736064842624,"size":15049,"at":1736915163202,"hash":"160f64134618012ad6ebb6d6244809d3c66a4c8096f9eaff23630d66fa1c684a"},"blocks":{"#---frontmatter---":[1,6],"##现有 `SimpleSharedPtr` 的线程安全性分析":[8,33],"##现有 `SimpleSharedPtr` 的线程安全性分析#{1}":[12,24],"##现有 `SimpleSharedPtr` 的线程安全性分析#{2}":[25,25],"##现有 `SimpleSharedPtr` 的线程安全性分析#{3}":[26,29],"##现有 `SimpleSharedPtr` 的线程安全性分析#{4}":[30,33],"##实现线程安全的 `SimpleSharedPtr`":[34,120],"##实现线程安全的 `SimpleSharedPtr`#{1}":[38,41],"##实现线程安全的 `SimpleSharedPtr`#方法一：使用 `std::atomic` 管理引用计数":[42,66],"##实现线程安全的 `SimpleSharedPtr`#方法一：使用 `std::atomic` 管理引用计数#{1}":[46,53],"##实现线程安全的 `SimpleSharedPtr`#方法一：使用 `std::atomic` 管理引用计数#{2}":[54,54],"##实现线程安全的 `SimpleSharedPtr`#方法一：使用 `std::atomic` 管理引用计数#{3}":[55,58],"##实现线程安全的 `SimpleSharedPtr`#方法一：使用 `std::atomic` 管理引用计数#{4}":[59,62],"##实现线程安全的 `SimpleSharedPtr`#方法一：使用 `std::atomic` 管理引用计数#{5}":[63,66],"##实现线程安全的 `SimpleSharedPtr`#方法二：引入互斥锁保护指针操作":[67,91],"##实现线程安全的 `SimpleSharedPtr`#方法二：引入互斥锁保护指针操作#{1}":[71,78],"##实现线程安全的 `SimpleSharedPtr`#方法二：引入互斥锁保护指针操作#{2}":[79,79],"##实现线程安全的 `SimpleSharedPtr`#方法二：引入互斥锁保护指针操作#{3}":[80,83],"##实现线程安全的 `SimpleSharedPtr`#方法二：引入互斥锁保护指针操作#{4}":[84,87],"##实现线程安全的 `SimpleSharedPtr`#方法二：引入互斥锁保护指针操作#{5}":[88,91],"##实现线程安全的 `SimpleSharedPtr`#方法三：组合使用 `std::atomic` 和互斥锁":[92,120],"##实现线程安全的 `SimpleSharedPtr`#方法三：组合使用 `std::atomic` 和互斥锁#{1}":[96,103],"##实现线程安全的 `SimpleSharedPtr`#方法三：组合使用 `std::atomic` 和互斥锁#{2}":[104,104],"##实现线程安全的 `SimpleSharedPtr`#方法三：组合使用 `std::atomic` 和互斥锁#{3}":[105,108],"##实现线程安全的 `SimpleSharedPtr`#方法三：组合使用 `std::atomic` 和互斥锁#{4}":[109,112],"##实现线程安全的 `SimpleSharedPtr`#方法三：组合使用 `std::atomic` 和互斥锁#{5}":[113,116],"##实现线程安全的 `SimpleSharedPtr`#方法三：组合使用 `std::atomic` 和互斥锁#{6}":[117,120],"##完整线程安全的 `ThreadSafeSharedPtr` 实现":[121,455],"##完整线程安全的 `ThreadSafeSharedPtr` 实现#{1}":[125,298],"##完整线程安全的 `ThreadSafeSharedPtr` 实现#关键改动说明":[299,442],"##完整线程安全的 `ThreadSafeSharedPtr` 实现#关键改动说明#{1}":[303,442],"##完整线程安全的 `ThreadSafeSharedPtr` 实现#注意事项":[443,455],"##完整线程安全的 `ThreadSafeSharedPtr` 实现#注意事项#{1}":[447,447],"##完整线程安全的 `ThreadSafeSharedPtr` 实现#注意事项#{2}":[448,451],"##完整线程安全的 `ThreadSafeSharedPtr` 实现#注意事项#{3}":[452,455],"##测试线程安全的 `ThreadSafeSharedPtr`":[456,586],"##测试线程安全的 `ThreadSafeSharedPtr`#{1}":[460,576],"##测试线程安全的 `ThreadSafeSharedPtr`#{2}":[577,577],"##测试线程安全的 `ThreadSafeSharedPtr`#{3}":[578,578],"##测试线程安全的 `ThreadSafeSharedPtr`#{4}":[579,582],"##测试线程安全的 `ThreadSafeSharedPtr`#{5}":[583,586],"##注意事项和最佳实践":[587,611],"##注意事项和最佳实践#{1}":[591,611],"##总结":[612,629],"##总结#{1}":[616,623],"##总结#{2}":[624,624],"##总结#{3}":[625,625],"##总结#{4}":[626,626],"##总结#{5}":[627,627],"##总结#{6}":[628,629]}},